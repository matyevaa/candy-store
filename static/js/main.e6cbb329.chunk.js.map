{"version":3,"sources":["constants/ActionTypes.js","reducers/cart.js","reducers/products.js","reducers/index.js","hooks/useProducts.js","images/pink1.png","components/Product.js","components/ProductItem.js","components/ProductsList.js","containers/ProductsContainer.js","actions/index.js","containers/CandiesPage.js","components/Cart.js","containers/CartContainer.js","containers/CartPage.js","containers/App.js","index.js"],"names":["ADD_TO_CART","CHECKOUT_REQUEST","CHECKOUT_FAILURE","RECEIVE_PRODUCTS","initialState","addedIds","quantityById","state","action","type","indexOf","productId","cart","products","inventory","combineReducers","byId","reduce","obj","product","id","visibleIds","map","getProduct","getVisibleProducts","getAddedIds","fromCart","getQuantity","fromProducts","getTotal","total","price","toFixed","getCartProducts","quantity","cb","timeout","setTimeout","_products","payload","nameStyle","css","pStyle","center","children","together","Product","title","photoUrl","styles","className","src","ProductItem","onAddToCartClicked","onClick","disabled","ProductsList","grid","connect","addToCart","dispatch","getState","types","addToCartUnsafe","display","CandiesPage","Cart","onCheckoutClicked","hasProducts","length","nodes","checkout","shop","CartPage","App","nav","Pink","candyFont","text","images","exact","path","component","window","location","href","to","middleware","thunk","store","createStore","reducer","applyMiddleware","receiveProducts","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6cbb329.chunk.js","sourcesContent":["export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'\r\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS'\r\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE'\r\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS'\r\n","import {\r\n  ADD_TO_CART,\r\n  CHECKOUT_REQUEST,\r\n  CHECKOUT_FAILURE\r\n} from '../constants/ActionTypes'\r\n\r\nconst initialState = {\r\n  addedIds: [],\r\n  quantityById: {}\r\n}\r\n\r\nconst addedIds = (state = initialState.addedIds, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      if (state.indexOf(action.productId) !== -1) {\r\n        return state\r\n      }\r\n      return [ ...state, action.productId ]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst quantityById = (state = initialState.quantityById, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const { productId } = action\r\n      return { ...state,\r\n        [productId]: (state[productId] || 0) + 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const getQuantity = (state, productId) =>\r\n  state.quantityById[productId] || 0\r\n\r\nexport const getAddedIds = state => state.addedIds\r\n\r\nconst cart = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHECKOUT_REQUEST:\r\n      return initialState\r\n    case CHECKOUT_FAILURE:\r\n      return action.cart\r\n    default:\r\n      return {\r\n        addedIds: addedIds(state.addedIds, action),\r\n        quantityById: quantityById(state.quantityById, action)\r\n      }\r\n  }\r\n}\r\n\r\nexport default cart\r\n","import { combineReducers } from 'redux'\r\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from '../constants/ActionTypes'\r\n\r\nconst products = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        inventory: state.inventory - 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst byId = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        ...action.products.reduce((obj, product) => {\r\n          obj[product.id] = product\r\n          return obj\r\n        }, {})\r\n      }\r\n    default:\r\n      const { productId } = action\r\n      if (productId) {\r\n        return {\r\n          ...state,\r\n          [productId]: products(state[productId], action)\r\n        }\r\n      }\r\n      return state\r\n  }\r\n}\r\n\r\nconst visibleIds = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_PRODUCTS:\r\n      return action.products.map(product => product.id)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  byId,\r\n  visibleIds\r\n})\r\n\r\nexport const getProduct = (state, id) =>\r\n  state.byId[id]\r\n\r\nexport const getVisibleProducts = state =>\r\n  state.visibleIds.map(id => getProduct(state, id))\r\n","import { combineReducers } from 'redux'\r\nimport cart, * as fromCart from './cart'\r\nimport products, * as fromProducts from './products'\r\n\r\nexport default combineReducers({\r\n  cart,\r\n  products\r\n})\r\n\r\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\r\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\r\nconst getProduct = (state, id) => fromProducts.getProduct(state.products, id)\r\n\r\nexport const getTotal = state =>\r\n  getAddedIds(state)\r\n    .reduce((total, id) =>\r\n      total + getProduct(state, id).price * getQuantity(state, id),\r\n      0\r\n    )\r\n    .toFixed(2)\r\n\r\nexport const getCartProducts = state =>\r\n  getAddedIds(state).map(id => ({\r\n    ...getProduct(state, id),\r\n    quantity: getQuantity(state, id)\r\n  }))\r\n","/**\r\n * Mocking client-server processing\r\n */\r\nimport _products from '../data/products.json'\r\n\r\nconst TIMEOUT = 100\r\n\r\nexport default {\r\n  getProducts: (cb, timeout) => setTimeout(() => cb(_products), timeout || TIMEOUT),\r\n  buyProducts: (payload, cb, timeout) => setTimeout(() => cb(), timeout || TIMEOUT)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pink1.9d3e40cc.png\";","/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Global, css, jsx } from '@emotion/react';\r\n\r\n\r\nconst nameStyle = css`\r\n  margin: 10px;\r\n`;\r\n\r\nconst pStyle = css`\r\n  margin: 10px;\r\n  font-size: 17px;\r\n`;\r\n\r\nconst center = css`\r\n  text-align: center;\r\n`;\r\n\r\nconst children = css`\r\n`;\r\n\r\nconst together = css`\r\n  width: 150px;\r\n  height: 180px;\r\n  overflow: hidden;\r\n  white-space: pre-line;\r\n  background: #ed5e71;\r\n  opacity: 0.9;\r\n  ${center};\r\n`;\r\n\r\n\r\nconst Product = ({ price, quantity, title, photoUrl }) => (\r\n  <div>\r\n    <Global\r\n      styles={css`\r\n        .together {\r\n          ${together}\r\n        }\r\n        .children {\r\n          ${children}\r\n        }\r\n        .nameStyle {\r\n          ${nameStyle}\r\n        }\r\n        .pStyle {\r\n          ${pStyle}\r\n        }\r\n\r\n      `}\r\n    />\r\n\r\n  <div className=\"together\">\r\n      <img src={photoUrl}/>\r\n      <div className=\"children\">\r\n        <h3 className=\"nameStyle\">{title}</h3>\r\n        <p className=\"pStyle\">${price}{quantity ? ` x ${quantity}` : null}</p>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n)\r\n\r\nProduct.propTypes = {\r\n  price: PropTypes.number,\r\n  quantity: PropTypes.number,\r\n  title: PropTypes.string\r\n}\r\n\r\nexport default Product\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Product from './Product'\r\nimport { Global, css, jsx } from '@emotion/react';\r\nimport { GridWrap, GridRow, GridColumn } from 'emotion-flex-grid'\r\n\r\n\r\nconst ProductItem = ({ product, onAddToCartClicked }) => (\r\n  <div>\r\n    <Global\r\n      styles={css`\r\n        \r\n\r\n        .addBtn {\r\n          display: inline-block;\r\n          text-decoration: none;\r\n          background: #ff8181;\r\n          color: #FCF0F1;\r\n          font-size: 13px;\r\n          width: 40px;\r\n          height: 40px;\r\n          border-radius: 50%;\r\n          text-align: center;\r\n          font-weight: bold;\r\n          vertical-align: middle;\r\n          overflow: hidden;\r\n          box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.29);\r\n          border-bottom: solid 3px #bd6565;\r\n          transition: .4s;\r\n          outline: none;\r\n          border:none;\r\n        }\r\n\r\n        .addBtn:active {\r\n          -ms-transform: translateY(2px);\r\n          -webkit-transform: translateY(2px);\r\n          transform: translateY(2px);\r\n          box-shadow: 0 0 9px rgba(0, 0, 0, 0.15);\r\n          border-bottom: none;\r\n        }\r\n      `}\r\n    />\r\n    <Product\r\n      title={product.title}\r\n      price={product.price}\r\n      quantity={product.inventory}\r\n      photoUrl={product.photoUrl}\r\n       />\r\n     <button className=\"addBtn\"\r\n      onClick={onAddToCartClicked}\r\n      disabled={product.inventory > 0 ? '' : 'disabled'}>\r\n      {product.inventory > 0 ? 'Add' : 'Sold Out'}\r\n    </button>\r\n  </div>\r\n)\r\n\r\nProductItem.propTypes = {\r\n  product: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    inventory: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  onAddToCartClicked: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ProductItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProductsList = ({ children }) => (\r\n  <div>\r\n    <div>{children}</div>\r\n  </div>\r\n)\r\n\r\nProductsList.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ProductsList\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addToCart } from '../actions'\r\nimport { getVisibleProducts } from '../reducers/products'\r\nimport ProductItem from '../components/ProductItem'\r\nimport ProductsList from '../components/ProductsList'\r\nimport { Global, css, jsx } from '@emotion/react';\r\nimport { GridWrap, GridRow, GridColumn } from 'emotion-flex-grid'\r\n\r\n\r\nconst grid = css`\r\n  margin: 30px;\r\n`;\r\n\r\nconst ProductsContainer = ({ products, addToCart }) => (\r\n  <div>\r\n    <Global\r\n      styles={css`\r\n        .grid {\r\n          ${grid}\r\n        }\r\n\r\n      `}\r\n    />\r\n    <ProductsList>\r\n      {products.map(product =>\r\n        <GridRow className=\"grid\" display=\"inline-block\">\r\n          <ProductItem\r\n            key={product.id}\r\n            product={product}\r\n            onAddToCartClicked={() => addToCart(product.id)} />\r\n        </GridRow>\r\n      )}\r\n    </ProductsList>\r\n  </div>\r\n)\r\n\r\nProductsContainer.propTypes = {\r\n  products: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    inventory: PropTypes.number.isRequired\r\n  })).isRequired,\r\n  addToCart: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: getVisibleProducts(state.products)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addToCart }\r\n)(ProductsContainer)\r\n","import shop from '../hooks/useProducts'\r\nimport * as types from '../constants/ActionTypes'\r\n\r\nconst receiveProducts = products => ({\r\n  type: types.RECEIVE_PRODUCTS,\r\n  products\r\n})\r\n\r\nexport const getAllProducts = () => dispatch => {\r\n  shop.getProducts(products => {\r\n    dispatch(receiveProducts(products))\r\n  })\r\n}\r\n\r\nconst addToCartUnsafe = productId => ({\r\n  type: types.ADD_TO_CART,\r\n  productId\r\n})\r\n\r\nexport const addToCart = productId => (dispatch, getState) => {\r\n  if (getState().products.byId[productId].inventory > 0) {\r\n    dispatch(addToCartUnsafe(productId))\r\n  }\r\n}\r\n\r\nexport const checkout = products => (dispatch, getState) => {\r\n  const { cart } = getState()\r\n\r\n  dispatch({\r\n    type: types.CHECKOUT_REQUEST\r\n  })\r\n  shop.buyProducts(products, () => {\r\n    dispatch({\r\n      type: types.CHECKOUT_SUCCESS,\r\n      cart\r\n    })\r\n    // Replace the line above with line below to rollback on failure:\r\n    // dispatch({ type: types.CHECKOUT_FAILURE, cart })\r\n  })\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport { Global, css, jsx } from '@emotion/react';\r\nimport ProductsContainer from './ProductsContainer';\r\n\r\n\r\nfunction CandiesPage() {\r\n  return(\r\n    <div className=\"prodCont\">\r\n      <Global\r\n        styles={css`\r\n          body {\r\n            overflow: hidden;\r\n          }\r\n          .prodCont {\r\n            margin-top: 210px;\r\n            margin-left: 30px;\r\n            overflow-y: auto;\r\n            height: 370px;\r\n          }\r\n          ::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        `}\r\n      />\r\n      <ProductsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandiesPage;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Product from './Product'\r\n\r\nconst Cart  = ({ products, total, onCheckoutClicked }) => {\r\n  const hasProducts = products.length > 0\r\n  const nodes = hasProducts ? (\r\n    products.map(product =>\r\n      <Product\r\n        title={product.title}\r\n        price={product.price}\r\n        quantity={product.quantity}\r\n        photoUrl={product.photoUrl}\r\n        key={product.id}\r\n      />\r\n    )\r\n  ) : (\r\n    <em>Please add some products to cart.</em>\r\n  )\r\n\r\n  return (\r\n    <div className=\"nodes\">\r\n      <h3>Your Cart</h3>\r\n      <div>{nodes}</div>\r\n      <p>Total: &#36;{total}</p>\r\n      <button onClick={onCheckoutClicked}\r\n        disabled={hasProducts ? '' : 'disabled'}>\r\n        Checkout\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nCart.propTypes = {\r\n  products: PropTypes.array,\r\n  total: PropTypes.string,\r\n  onCheckoutClicked: PropTypes.func\r\n}\r\n\r\nexport default Cart\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { checkout } from '../actions'\r\nimport { getTotal, getCartProducts } from '../reducers'\r\nimport Cart from '../components/Cart'\r\n\r\nconst CartContainer = ({ products, total, checkout }) => (\r\n  <Cart\r\n    products={products}\r\n    total={total}\r\n    onCheckoutClicked={() => checkout(products)} />\r\n)\r\n\r\nCartContainer.propTypes = {\r\n  products: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired\r\n  })).isRequired,\r\n  total: PropTypes.string,\r\n  checkout: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: getCartProducts(state),\r\n  total: getTotal(state)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { checkout }\r\n)(CartContainer)\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport { Global, css, jsx } from '@emotion/react';\r\nimport CartContainer from './CartContainer';\r\n\r\nfunction CartPage() {\r\n  return(\r\n    <div className=\"generalC\">\r\n      <Global\r\n        styles={css`\r\n          .generalC {\r\n            margin-top: 210px;\r\n            margin-left: 30px;\r\n            overflow-y: auto;\r\n            height: 370px;\r\n          }\r\n          ::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        `}\r\n      />\r\n      <CartContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartPage;\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport { Global, css, jsx } from '@emotion/react';\r\nimport Pink from \"../images/pink1.png\";\r\nimport CandiesPage from './CandiesPage';\r\nimport CartPage from './CartPage';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect,\r\n  useParams,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const nav = css`\r\n    background-image: url(${Pink});\r\n    background-repeat: repeat-x;\r\n    height: 150px;\r\n    width: 1390px;\r\n    margin-left: -6px;\r\n    margin-top: -11px;\r\n    opacity: 0.8;\r\n    padding-bottom: 40px;\r\n    overflow: hidden;\r\n    top: 0;\r\n    position: fixed;\r\n  `;\r\n\r\n  const candyFont = css`\r\n    font-style: italic;\r\n    font-weight: bold;\r\n  `;\r\n\r\n  const text = css`\r\n    font-size: 23px;\r\n    position: absolute;\r\n    margin-top: 100px;\r\n    text-align: center;\r\n    ${candyFont};\r\n    width: 100%;\r\n    opacity: 0.8;\r\n  `;\r\n\r\n  const title = css`\r\n    font-size: 40px;\r\n    position: absolute;\r\n    margin-top: 60px;\r\n    text-align: center;\r\n    width: 100%;\r\n    font-style: italic;\r\n  `;\r\n\r\n  const images = css`\r\n    height: 80px;\r\n    width: 100px;\r\n  `;\r\n\r\n\r\n  return(\r\n    <div className=\"general\">\r\n      <Global\r\n      styles={css`\r\n          body {\r\n            background-image: url(\"https://i.pinimg.com/736x/b5/83/a7/b583a7f19948bc50ae42add863412413.jpg\");\r\n            background-repeat: repeat-x;\r\n            background-attachment: fixed;\r\n          }\r\n          h1 {\r\n            font-family: Georgia, sans-serif;\r\n            letter-spacing: -2px;\r\n            color: white;\r\n            cursor: pointer;\r\n          }\r\n          img {\r\n              ${images}\r\n              margin-top: 10px;\r\n          }\r\n          .nav {\r\n            ${nav}\r\n          }\r\n          .title {\r\n            ${title}\r\n          }\r\n          .text {\r\n            ${text}\r\n          }\r\n          .links {\r\n            margin-top: 150px;\r\n            width: 320px;\r\n            overflow: hidden;\r\n            top: 0;\r\n            position: fixed;\r\n            font-style: italic;\r\n            font-weight: bold;\r\n            opacity: 0.8;\r\n            font-size: 20px;\r\n          }\r\n          a {\r\n            cursor: pointer;\r\n            text-decoration: none;\r\n          }\r\n          a:hover {\r\n            background:rgba(255,255,255, 0.4);\r\n            border-radius: 20px;\r\n            text-align: center;\r\n          }\r\n          #link1 {\r\n            float: left;\r\n          }\r\n          #link2 {\r\n            float: right;\r\n          }\r\n          .general {\r\n            display: flex;\r\n            justify-content: center;\r\n          }\r\n          .nodes {\r\n            ${candyFont};\r\n            text-align: center;\r\n          }\r\n      `}\r\n    />\r\n\r\n\r\n      <Switch>\r\n        <Route exact path=\"/products\" component={CandiesPage} />\r\n        <Route exact path=\"/cart\" component={CartPage} />\r\n      </Switch>\r\n\r\n      <div className=\"nav\">\r\n        <h1 className=\"title\" onClick={() => {window.location.href=\"/\"}}>Penny Candy Store</h1>\r\n        <p className=\"text\">Explore your candies here</p>\r\n      </div>\r\n      <div className=\"links\">\r\n        <a id=\"link1\"><Link to=\"./products\">Candies</Link></a>\r\n        <a id=\"link2\"><Link to=\"./cart\">Shopping Cart</Link></a>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { createLogger } from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducers'\r\nimport { getAllProducts } from './actions'\r\nimport App from './containers/App'\r\n\r\nimport {\r\n  BrowserRouter\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst middleware = [ thunk ];\r\nif (process.env.NODE_ENV !== 'production') {\r\n  middleware.push(createLogger());\r\n}\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  applyMiddleware(...middleware)\r\n)\r\n\r\nstore.dispatch(getAllProducts())\r\n\r\nrender(\r\n  <BrowserRouter>\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n</BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}